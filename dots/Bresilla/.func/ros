setdir(){
	export $1=`pwd`
}

ros_mark(){
	sudo rm -r /home/trim/.marks/ros_mark && 
	mark ros_mark
}

ros_path(){
	jump ros_mark
}

ros_source(){
	source /opt/ros/kinetic/setup.zsh && 
	ros_path && 
	source devel/setup.zsh && 
	cd ~
}

ros_create(){
	mkdir "$1" && 
	cd "$1" && 
	mkdir src && 
	cd src && 
	catkin_init_workspace && 
	cd .. && 
	catkin_make && 
	cd ..
}

ros_build(){
	setdir this && 
	ros_path && 
	catkin_make && 
	$this
}

ros_depend(){
	ros_path && 
	rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y
}

ros_makepack(){
	ros_path && 
	cd src && 
	catkin_create_pkg "$1" && 
	mkdir "$1"/src/ && 
	touch "$1"/src/"$1" && 
	chmod u+x "$1"/src/"$1" && 
	echo '#!/usr/bin/env python' >> "$1"/src/"$1"
}

ros_gitpack(){
	ros_path && 
	cd src && 
	git clone $1 &&
	ros_path
}

idonknow(){
	xhost +local:root
	nvidia-docker run -it \
	--env="DISPLAY"  \
	--env="QT_X11_NO_MITSHM=1"  \
	--volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
	--workdir="/home/$USER" \
	--volume="/home/$USER:/home/$USER" \
	--volume="/etc/group:/etc/group:ro" \
	--volume="/etc/passwd:/etc/passwd:ro" \
	--volume="/etc/shadow:/etc/shadow:ro" \
	--volume="/etc/sudoers.d:/etc/sudoers.d:ro" \
	--volume="$HOME/host_docker:/home/user/host_docker" \
	-e LOCAL_USER_ID=`id -u $USER` \
	-e LOCAL_GROUP_ID=`id -g $USER` \
	-e LOCAL_GROUP_NAME=`id -gn $USER` \
	 ros:kinetic-desktop-full

	xhost -local:root
}

ros-start(){
	docker run -it --env="DISPLAY" --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" -v /home/$(whoami)/ros:/ros --device /dev/video0 --device /dev/dri osrf/ros:kinetic-desktop-full bash
}
 
ros-connect(){
	docker exec -ti $(docker ps -aq --filter ancestor=osrf/ros:kinetic-desktop-full --filter status=running) bash
}
 
ros-clean(){
	docker rm $(docker ps -aq --filter ancestor=osrf/ros:kinetic-desktop-full --filter status=exited)
}

gazebo-cli(){
	export GAZEBO_MASTER_IP=$(sudo docker inspect –format ‘’ “8a2ffd1e5736”) 
	export GAZEBO_MASTER_URI=$GAZEBO_MASTER_IP:11345
	gzclient
}
